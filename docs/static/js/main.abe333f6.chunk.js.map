{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAsB9C,OACI,oCACA,0BAAMC,SAdW,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OASlB,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAxBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,uBCPjBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAUH,GAF7C,+DAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAcbM,GAda,4CAAH,sDCARO,EAAc,SAAC,GAAuB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGrC,OADAc,QAAQC,IAAI,CAAEN,KAAIC,QAAOV,QAErB,yBAAKgB,UAAU,2CACX,yBAAKC,IAAOjB,EAAMkB,IAAOR,IACzB,+BAAMA,EAAN,OCHCS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEfd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KA8B5C,OAtBGC,qBAAW,WAGV1B,EAASC,GACR0B,MAAM,SAAAC,GAEHC,YAAY,WAERJ,EAAS,CACLjB,KAAKoB,EACLL,SAAS,MAGd,WAML,CAAEtB,IAGDuB,EDzByBM,CAAc7B,GAAjCa,EAJ4B,EAIjCN,KAAae,EAJoB,EAIpBA,QAWjB,OACI,oCACA,4BAAKtB,GAEHsB,GAAW,sCAEX,yBAAKJ,UAAU,aAGLL,EAAOJ,KAAK,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACAoB,IAAOpB,EAAIC,IACND,UE3BfqB,EAAe,WAAO,IAAD,EAGM7C,mBAAS,CAAC,cAHhB,mBAGvB8C,EAHuB,KAGX/C,EAHW,KAM9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAID,4BAEQ+C,EAAWvB,KAAK,SAAAT,GAAQ,OACvB,kBAAC,EAAD,CACA8B,IAAM9B,EACNA,SAAaA,UClBjCiC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.abe333f6.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n        \r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        \r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories( cats => [inputValue, ...cats ]);\r\n            setinputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={ handleSubmit }>\r\n        <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={ handleInputChange}\r\n            />\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=5rSrMAS0tjsT1eaX2Dw5QA9R8jFmr3gb`\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    }\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url}) => {\r\n\r\n    console.log({ id, title, url});\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn \">\r\n            <img src= { url } alt= { title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n//import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n//const [images, setImages] = useState([])\r\n\r\nconst { data:images, loading} = useFetchGifs( category );\r\n\r\n/* useEffect( ()=> {\r\n    getGifs( category ) \r\n       .then ( setImages );\r\n}, [ category ]) */\r\n\r\n\r\n   \r\n\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n\r\n        { loading && <p>Loading</p> }\r\n\r\n       {  <div className=\"card-grid\">\r\n            \r\n                {\r\n                    images.map( img => (\r\n                       <GifGridItem \r\n                       key= { img.id }\r\n                       { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            \r\n        </div> }\r\n        </>\r\n    )\r\n}\r\n\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n   const [state, setState] = useState({\r\n       data: [],\r\n       loading: true\r\n   });\r\n\r\n\r\n   useEffect( () => {\r\n\r\n\r\n    getGifs( category )\r\n    .then (imgs => {\r\n\r\n        setTimeout( () => {\r\n\r\n            setState({\r\n                data:imgs,\r\n                loading: false\r\n            });\r\n\r\n        }, 1500);\r\n\r\n        })\r\n        \r\n\r\n\r\n   }, [ category ] )\r\n\r\n\r\nreturn state; // { data:[], loading: true };\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories} />\r\n            <hr />\r\n\r\n            \r\n\r\n           <ol>\r\n               {\r\n                   categories.map( category => \r\n                    <GifGrid \r\n                    key={ category }\r\n                    category = { category } />\r\n                    )}\r\n           </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}